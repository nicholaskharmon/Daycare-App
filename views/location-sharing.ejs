<html>
<head>
    <title>Daycare</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">

</head>
<body>

<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBmhelMVEXev83EyFPJhCJ1fYnQleKPfos&sensor=true"></script>
<script type="text/javascript" src="/socket.io/socket.io.js"></script>

<script type="text/javascript" src="/javascripts/jquery-1.11.0.min.js"></script>
<!--<script type="text/javascript" src="/javascripts/location-sharing.js"></script>-->
<script type="text/javascript">

    function deg2rad(val) {
        var pi = Math.PI;
        var de_ra = ((eval(val))*(pi/180));
        return de_ra;
    }

    function getmeter(lat1, lon1, lat2, lon2) {
        delta_lon = deg2rad(lon2) - deg2rad(lon1);

        distance = Math.acos(Math.sin(deg2rad(lat1)) * Math.sin(deg2rad(lat2)) + Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) *
                        Math.cos(delta_lon)) * 3963.189; //mile

        gap = parseInt(distance * 1.609344); // km
        return gap;
    }

    function getDistanceFromLatLonInKm(lat1,lng1,lat2,lng2) {
        var R = 6371; // Radius of the earth in km
        var dLat = deg2rad(lat2-lat1);  // deg2rad below
        var dLon = deg2rad(lng2-lng1);
        var a = Math.sin(dLat/2) * Math.sin(dLat/2) + Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * Math.sin(dLon/2) * Math.sin(dLon/2);
        var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));
        var d = R * c; // Distance in km
        return d;
    }

    function initLocationSharing(location_callback, error_callback){

        //For generating a random unique ID
        function guid() {
            function s4() { return Math.floor((1 + Math.random()) * 0x10000)
                    .toString(16).substring(1);
            };

            return s4() + s4() + '-' + s4() + '-' + s4() + s4();
        }

        var userInfo = {
            id: guid(),
            name: '<%=nname%>'
        }

        // ================================
        // Setup Socket IO
        // ================================
        //var socket = io.connect('http://ec2-54-147-229-234.compute-1.amazonaws.com:8080');
        var socket = io.connect('http://localhost:8080');
        var nname = '<%=nname%>';
        console.log(nname);
        socket.emit('joinroom',{room:'map', nickname: nname});
        socket.on('connect', function () {
            socket.on('location', function(location){
                if(location.id != userInfo.id) {
                    location_callback(location);
                }
            })
        });

        // ================================
        // Setup Geolocation
        // ================================
        if (!navigator.geolocation) {
            return userInfo;
        }

        function geo_success(position) {
            var longitude = position.coords.longitude;
            userInfo.latitude  = position.coords.latitude;
            userInfo.longitude = position.coords.longitude;
            location_callback(userInfo);
            sendLocation();
        }

        function geo_error() {
            error_callback();
        }

        var sendLocationTimeout = null;
        function sendLocation(){
            socket.emit('location', userInfo);
            clearTimeout(sendLocationTimeout);
            sendLocationTimeout = setTimeout(sendLocation, 1000*5);
        }

        var geo_options = { enableHighAccuracy: true };
        navigator.geolocation.watchPosition(geo_success, geo_error, geo_options);
        navigator.geolocation.getCurrentPosition(geo_success, geo_error, geo_options);

        return userInfo;
    }
    // User Infomation
    var currentUserInfo = null;
    var users = {};

    // Google Maps UI
    var map = null;
    var infowindow = null;
    var refreshTimeout = null;

    function userLocationUpdate(userInfo){
        if(!users[userInfo.id]) users[userInfo.id] = { id: userInfo.id };

        users[userInfo.id].name = userInfo.name;
        users[userInfo.id].latitude  = userInfo.latitude;
        users[userInfo.id].longitude = userInfo.longitude;
        users[userInfo.id].speed = userInfo.speed;
        users[userInfo.id].timestamp = new Date().getTime()
        refreshMarkers();
    }

    function refreshMarkers(){
        if (!map) return;
        if (!currentUserInfo.movedMapCenter && currentUserInfo.timestamp) {
            $('#user-name').val(currentUserInfo.name);
            $('#user-name').keyup(function() {
                currentUserInfo.name = $('#user-name').val();
            })
            currentUserInfo.movedMapCenter = true;
            map.setCenter(new google.maps.LatLng(
                    currentUserInfo.latitude, currentUserInfo.longitude));
        }

        var dist = getDistanceFromLatLonInKm(40.037710, 124.340278, currentUserInfo.latitude, currentUserInfo.longitude);
        dist = dist * 1;
        var speed = eval(currentUserInfo.speed);
        var ETA = 0;

        if(speed > 0) {
            ETA = dist / speed * 60;
        }else{
            speed = 0;
        }

        var informstr = "distance : " + dist.toFixed(1) + "\&nbsp;\&nbsp; speed : " + speed.toFixed(1) + "\&nbsp;\&nbsp; ETA : " + ETA.toFixed(1);
        $('#inform').html(informstr);

        for (var id in users) {
            var userInfo = users[id];

            if(userInfo.marker){
                // If we havn't received any update from the user
                //  We remove the marker of missing user
                if( userInfo.id != currentUserInfo.id &&
                        userInfo.timestamp + 1000*30 < new Date().getTime() ){
                    userInfo.marker.setMap(null);
                    delete users[id];
                    continue;
                }

            }else{
                // Create a marker for the new user
                var marker = new google.maps.Marker({ map:map });
                google.maps.event.addListener(marker, 'click', function() {
                    infowindow.setContent(marker.getTitle())
                    infowindow.open(map, marker);
                });

                userInfo.marker = marker;
            }


            //Move the markers
            userInfo.marker.setTitle(userInfo.name);
            userInfo.marker.setPosition(
                    new google.maps.LatLng(userInfo.latitude, userInfo.longitude));
        }

        // Refresh the markers every 20 seconds
        clearTimeout(refreshTimeout)
        refreshTimeout = setTimeout(refreshMarkers, 1000*20);
    }

    function mapInitialize() {
        map = new google.maps.Map(document.getElementById("map-canvas"), {
            zoom: 12,
            center: new google.maps.LatLng(40.037710, 124.340278)  // 40.037710, 124.340278
        });
        infowindow = new google.maps.InfoWindow({ content: 'Test' });
        google.maps.event.addListener(map, 'click', function() {
            infowindow.close(map);
        });
        refreshMarkers();
    }

    function move_to_otheruser(){
        var ids = Object.keys(users)
        ids.slice(ids.indexOf(currentUserInfo.id),1);

        var random_user_id = ids[Math.floor(ids.length * Math.random())]
        var userInfo = users[random_user_id];
        map.setCenter(new google.maps.LatLng(
                userInfo.latitude, userInfo.longitude));

        infowindow.setContent(userInfo.name)
        infowindow.open(map, userInfo.marker);
    }

    google.maps.event.addDomListener(window, 'load', mapInitialize);
    currentUserInfo = initLocationSharing(userLocationUpdate);

</script>

<style>
    #div-title {
        height: 70px;
        padding: 20px 20px 0px 20px;
        background-color: #eaee9a;
        color : #ff2f42;
    }

    #homebtn{
        width:30px;height:30px;
        background-position: left center;
        background-repeat: no-repeat;
        background-image: url('/images/home.png');
        float:left;
    }

    #map-canvas  { height: 100%; width:100%; }
</style>

<div id="div-title">
    <!--<p></p>-->
    <div id="homebtn" onclick="location.href='/dashboard'" > </div>
    <h2 style="text-align:center; margin-top:0px">Map</h2>
    <p id="inform"></p>
</div>

<div id="map-canvas"></div>

</body>
</html>